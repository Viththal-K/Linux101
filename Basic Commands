COMMENT:
#this is a comment --> use # to write a comment
<<comment --> use <<comment to write multi-line comment
Your
Comment
Here
comment(This word has to be the same as the word used near <<)

DECLARE VARIABLE:
var=<value> --> define a variable (no space allowed near =)
readonly var_name="Hello" --> define a variable that can't be changed until end of script

ECHO:
echo <input> --> prints the input on the terminal
echo $var --> prints value in variable x
echo b{a,e,i,o,u}d --> iterates like a for loop (prints bad bed bid bod bud)
echo file{5..25} --> prints sequences, file5 to file 25
echo file{05..25..3} --> prints sequences with a gap of 3
echo \$HOME or '$HOME' --> called escaping a character, \ or ' turns off $
echo $'Line 1...\nLine 2...\nLine 3' --> print multiple lines using 1 echo command

PWD:
pwd --> prints the working directory

CD:
cd <path> --> changes the current working directory 
cd .. --> moves one level up
cd ~ --> changes current directory to user's home directory

LS:
ls --> list contents of the current directory
ls -R --> recursively list the contents of any subdirectories in the directory
ls -a --> list all the files even the hidden ones
ls -l --> list all contents with their access permission
ls -al --> list all files even the hidden ones and their access permissions
ls -lh --> list all files with file size
ls * --> Matching file / folder names (zero or more characters) eg. test -> ls t*
ls ? --> Matching file / folder names (Exactly one character) eg. test -> ls tes?

MKDIR / RMDIR:
mkdir <folder name> --> creates a new directory (folder)
rmdir <folder name> --> removes directory

MV:
mv <filename> <folder name> --> moves the file to the specified folder

CP:
cp <filename> <folder name> --> copies the file to the specified folder
cp <file1> <file2> --> creates a copy of file1 named as file2

RM:
rm <filename> --> deletes the file in the current directory

TOUCH:
touch <filename.txt> --> creates an empty file
touch .filename --> creates a hidden file which is not listed in list, its hiden

NANO:
nano <filename> --> creates a file inside the terminal

CAT:
cat <filename> --> displays the content of the file on stdout
cat <file1> <file2> --> concatenates the contents of multiple files and displays the content on stdout
tac <filename> --> displays the content of the file in reverse order (opposite of cat)

HEAD:
head <filename> --> displays the first 10 lines of a file
head -n 3 <filename> --> displays the first 3 / specified lines

TAIL:
tail <filename> --> displays the last 10 lines of a file
tail -n 2 <filename> --> displays the last 2 / specified lines

SORT:
sort <filename> --> sorts and organizes the contents of a file

UNIQ:
uniq <filename> --> shows unique consecutive words 
uniq -c <filename> --> displays the unique count of consecutive words after squashing
uniq -u <filename> --> shows only words with count 1

WC:
wc <filename> --> displays the lines, word count, characters
wc -l <filename> --> displays only the no. of lines

COMM:
comm <file1> <file2> --> compares two "sorted" files line by line and shows the unique and common lines between them

TR:
tr '[a-z]' '[A-Z]' --> used to translate or delete characters, performs operations such as changing uppercase letters to lowercase, replacing specific characters in a string, deleting specific characters, and compressing or deleting repeated characters.
tr -s '[:punct:][:space:]]' '\n' --> replaces punctuations and whitespaces with a newline character

CUT:
cut -c 1-10 <filename> --> shows character 1 to 10 from the file
cut -d " " -f 1,3 <filename> --> extracts specific fields from a file, specify delimiter using -d

CURL:
curl <url> --> dumps contents of the url to the screen

WGET:
wget <url> --> saves the contents of the url to a file
wget -qO - <url> --> displays the contents of the url on screen instead of saving to file

TEE:
tee <filename> --> redirects output to both display and file (clobber)
tee -a <filename> --> appends to the file rather than overwriting it

FILE TYPE:
file <filename> --> returns the file type

OPEN/EXECUTE FILE:
open <filename> --> opens a file
./<filename> --> executes the file
python3 ./<filename.py> --> executes a python file

TAR FILE:
tar cvf <filename.tar> <file1> <file2> --> compresses file1 and file2 into a tar file.
tar xvf <filename.tar> --> extracts files from the tar file

HISTORY LOG:
history --> shows all the commands run till now

SET:
set -x --> enables debugging of a script
