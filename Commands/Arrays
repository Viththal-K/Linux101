arr=("element1" "element2" "element3" "element4")

• Find the length of array -->

array_length=${#arr[@]}

• Iterating  over the array -->

for ((i=0; i<$array_length; i++))
do
    echo "${arr[i]}"
done

or 

for j in "${arr[@]}"
do
  echo "$j"
done

• Printing all elements in array -->

echo ${arr[@]}
or
echo ${arr[*]}

• Adding element to an array -->

array[index]=value
eg. numbers[5]="element5"

• Read the content of each line into an array and then display the entire array -->

i=0
while read lines
do 
    array[i]=$lines
    i=$((i+1))
done

echo ${array[@]}  # prints entire array 

• Slice the array and display only the elements lying between positions 3 and 7, both inclusive -->

i=0
while read lines
do 
    array[i]=$lines
    i=$((i+1))
done

echo ${array[@]:3:5}  # selecting 3th,4th,5th,6th,7th element from the array, so 5 elements from 3.

• Read the contents of each line into an array and then filter out (remove) all the names containing the letter 'a' or 'A' -->

i=0
while read country
do
    if [[ $country != *"a"* && $country != *"A"*  ]];
        then
        array[$i]=$country
        i=$((i+1))
    fi
done

echo ${array[@]}

• The first capital letter (if present) in each element of the array should be replaced with a dot ('.'). Then, display the entire array -->

array=$(sed 's/[A-Z]/./')
echo $array

• Find the number that occurs only once in an input stream -->

read n
arr=$(cat)
echo $arr | sed 's/ /\n/g' |sort -n |uniq -u
# sed 's/ /\n/g' is used to replace all occurrences of a space character with a newline character "\n" in a given input stream
